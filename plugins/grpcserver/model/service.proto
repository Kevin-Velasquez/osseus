syntax = "proto3";

package grpc;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

// The API handles incoming plugin data
service Grpc {

  // Creates a new plugin
  rpc CreatePlugin(CreatePluginRequest) returns (PluginData) {
    option (google.api.http) = {
      post: "/v1/plugins"
      body: "plugin"
    };
  }

  // Get plugin with specific id
  rpc GetPlugin(GetPluginRequest) returns (PluginData) {
    option (google.api.http) = { get: "/v1/plugins/{id}"};
  }

  // List all stored plugins
  rpc ListPlugins(google.protobuf.Empty) returns (ListPluginsResponse) {
    option (google.api.http) = { get: "/v1/plugins" };
  }

  // Delete stored plugin
  rpc DeletePlugin(DeletePluginRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = { delete: "/v1/plugins/{plugin}"};
  }
}

// A plugin resource
message PluginData {
  string id = 1;
  string cdn_link = 2;
  string status = 3;
}

// Request message for CreatePlugin method
message CreatePluginRequest {
  PluginData plugin = 1;
}

// Request message for GetPlugin method
message GetPluginRequest {
  string id = 1;
}

// Request message for DeletePlugin method
message DeletePluginRequest {
  string id = 1;
}

// Response message for ListPlugins method
message ListPluginsResponse {
  repeated PluginData plugin = 1;
}

