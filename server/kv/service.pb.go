// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package kv

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A plugin is the incoming plugin id
type Plugin struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Plugin) Reset()         { *m = Plugin{} }
func (m *Plugin) String() string { return proto.CompactTextString(m) }
func (*Plugin) ProtoMessage()    {}
func (*Plugin) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *Plugin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Plugin.Unmarshal(m, b)
}
func (m *Plugin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Plugin.Marshal(b, m, deterministic)
}
func (m *Plugin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Plugin.Merge(m, src)
}
func (m *Plugin) XXX_Size() int {
	return xxx_messageInfo_Plugin.Size(m)
}
func (m *Plugin) XXX_DiscardUnknown() {
	xxx_messageInfo_Plugin.DiscardUnknown(m)
}

var xxx_messageInfo_Plugin proto.InternalMessageInfo

func (m *Plugin) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// The response containing minified code from a CDN
type PluginData struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CdnLink              string   `protobuf:"bytes,2,opt,name=cdn_link,json=cdnLink,proto3" json:"cdn_link,omitempty"`
	Code                 []byte   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PluginData) Reset()         { *m = PluginData{} }
func (m *PluginData) String() string { return proto.CompactTextString(m) }
func (*PluginData) ProtoMessage()    {}
func (*PluginData) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *PluginData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PluginData.Unmarshal(m, b)
}
func (m *PluginData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PluginData.Marshal(b, m, deterministic)
}
func (m *PluginData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PluginData.Merge(m, src)
}
func (m *PluginData) XXX_Size() int {
	return xxx_messageInfo_PluginData.Size(m)
}
func (m *PluginData) XXX_DiscardUnknown() {
	xxx_messageInfo_PluginData.DiscardUnknown(m)
}

var xxx_messageInfo_PluginData proto.InternalMessageInfo

func (m *PluginData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PluginData) GetCdnLink() string {
	if m != nil {
		return m.CdnLink
	}
	return ""
}

func (m *PluginData) GetCode() []byte {
	if m != nil {
		return m.Code
	}
	return nil
}

func init() {
	proto.RegisterType((*Plugin)(nil), "kv.Plugin")
	proto.RegisterType((*PluginData)(nil), "kv.PluginData")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 163 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xca, 0x2e, 0x53, 0x92, 0xe0,
	0x62, 0x0b, 0xc8, 0x29, 0x4d, 0xcf, 0xcc, 0x13, 0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60, 0x54,
	0x60, 0xd4, 0xe0, 0x0c, 0x62, 0xca, 0x4c, 0x51, 0xf2, 0xe6, 0xe2, 0x82, 0xc8, 0xb8, 0x24, 0x96,
	0x24, 0xa2, 0xcb, 0x0a, 0x49, 0x72, 0x71, 0x24, 0xa7, 0xe4, 0xc5, 0xe7, 0x64, 0xe6, 0x65, 0x4b,
	0x30, 0x81, 0x45, 0xd9, 0x93, 0x53, 0xf2, 0x7c, 0x32, 0xf3, 0xb2, 0x85, 0x84, 0xb8, 0x58, 0x92,
	0xf3, 0x53, 0x52, 0x25, 0x98, 0x15, 0x18, 0x35, 0x78, 0x82, 0xc0, 0x6c, 0x23, 0x4b, 0x2e, 0x1e,
	0x88, 0x61, 0x41, 0xf9, 0xa5, 0x25, 0xa9, 0xc5, 0x42, 0x9a, 0x5c, 0x9c, 0xee, 0xa9, 0x25, 0x50,
	0x9b, 0xb9, 0xf4, 0xb2, 0xcb, 0xf4, 0x20, 0x6c, 0x29, 0x3e, 0x04, 0x1b, 0x64, 0xaf, 0x12, 0x43,
	0x12, 0x1b, 0xd8, 0xb1, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x70, 0x53, 0x75, 0x93, 0xbd,
	0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PluginRoutesClient is the client API for PluginRoutes service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PluginRoutesClient interface {
	// Get plugin with specific id
	GetPlugin(ctx context.Context, in *Plugin, opts ...grpc.CallOption) (*PluginData, error)
}

type pluginRoutesClient struct {
	cc *grpc.ClientConn
}

func NewPluginRoutesClient(cc *grpc.ClientConn) PluginRoutesClient {
	return &pluginRoutesClient{cc}
}

func (c *pluginRoutesClient) GetPlugin(ctx context.Context, in *Plugin, opts ...grpc.CallOption) (*PluginData, error) {
	out := new(PluginData)
	err := c.cc.Invoke(ctx, "/kv.PluginRoutes/GetPlugin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PluginRoutesServer is the server API for PluginRoutes service.
type PluginRoutesServer interface {
	// Get plugin with specific id
	GetPlugin(context.Context, *Plugin) (*PluginData, error)
}

func RegisterPluginRoutesServer(s *grpc.Server, srv PluginRoutesServer) {
	s.RegisterService(&_PluginRoutes_serviceDesc, srv)
}

func _PluginRoutes_GetPlugin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Plugin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginRoutesServer).GetPlugin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kv.PluginRoutes/GetPlugin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginRoutesServer).GetPlugin(ctx, req.(*Plugin))
	}
	return interceptor(ctx, in, info, handler)
}

var _PluginRoutes_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kv.PluginRoutes",
	HandlerType: (*PluginRoutesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPlugin",
			Handler:    _PluginRoutes_GetPlugin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
